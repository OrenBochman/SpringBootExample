package hello.product;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

//import hello.IDao;

@RestController    // This means that this class is a rest Controller
@RequestMapping(path="/api/products") // This means URL's start with /api (after Application path)
public class ProductApi //implements IDao<Product>
{
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private ProductController productController;
	
	@GetMapping
	public @ResponseBody Iterable<Product> getAllProducts() {
		// This returns a JSON or XML with the users
		return this.productController.read();
	}
	
	@PostMapping
	public void createProduct(@RequestBody Product product) {		
		this.productController.create(product);
	}	
	
	@PutMapping
	public void updateProduct(@RequestBody Product product 
			//,	RedirectAttributes redirectAttributes
			) {		
		this.productController.update(product);
	//	redirectAttributes.addFlashAttribute("message", "user was updated");

	}
	
	@DeleteMapping("/{id}")
	public void deleteProduct(
			@PathVariable("id") String id 
			,RedirectAttributes redirectAttributes
			) {		
		this.productController.delete(Long.parseLong(id));
		redirectAttributes.addFlashAttribute("message", "user was deleted");
	}
}